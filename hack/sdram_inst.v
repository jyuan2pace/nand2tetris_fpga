// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 15.1 (Build Build 185 10/21/2015)
// Created on Sat Jan  2 12:33:51 2016

sdram sdram_inst
(
	.CLOCK_50(CLOCK_50_sig) ,	// input  CLOCK_50_sig
	.q(q_sig) ,	// output [15:0] q_sig
	.RESET(RESET_sig) ,	// input  RESET_sig
	.DRAM_ADDR(DRAM_ADDR_sig) ,	// output [12:0] DRAM_ADDR_sig
	.DRAM_BA(DRAM_BA_sig) ,	// output [1:0] DRAM_BA_sig
	.DRAM_CAS_N(DRAM_CAS_N_sig) ,	// output  DRAM_CAS_N_sig
	.DRAM_CKE(DRAM_CKE_sig) ,	// output  DRAM_CKE_sig
	.DRAM_CLK(DRAM_CLK_sig) ,	// output  DRAM_CLK_sig
	.DRAM_CS_N(DRAM_CS_N_sig) ,	// output  DRAM_CS_N_sig
	.DRAM_DQ(DRAM_DQ_sig) ,	// inout [15:0] DRAM_DQ_sig
	.DRAM_DQM(DRAM_DQM_sig) ,	// output [1:0] DRAM_DQM_sig
	.DRAM_RAS_N(DRAM_RAS_N_sig) ,	// output  DRAM_RAS_N_sig
	.DRAM_WE_N(DRAM_WE_N_sig) 	// output  DRAM_WE_N_sig
);

